name: Run Tests

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Load environment variables
        run: |
          # Export each variable in .env.test to the GitHub environment
          export $(grep -v '^#' .env.test | xargs -d '\n')
          cat .env.test | grep -v '^#' >> $GITHUB_ENV
          echo "POSTGRES_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@cuecards-postgres-test:${POSTGRES_PORT_INTERNAL}/${POSTGRES_DB}?schema=public" >> $GITHUB_ENV

      - name: Start Docker Compose services
        run: docker compose -f ./docker/docker-compose.test.yml --env-file .env.test up -d

      - name: Prepare the database
        env:
          POSTGRES_URL: ${{ env.POSTGRES_URL }}
          SNAPLET_WORKING_DIRECTORY: prisma/seed
        run: |
          npx prisma migrate reset --force --skip-generate
          npx @snaplet/seed sync
          PRISMA_ENV=test npx prisma db seed

      - name: Run tests
        env:
          POSTGRES_URL: ${{ env.POSTGRES_URL }}
        run: npm test

      - name: Stop Docker Compose services
        if: always()
        run: docker compose -f ./docker/docker-compose.test.yml down
